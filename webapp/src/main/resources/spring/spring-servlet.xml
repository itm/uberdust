<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


    <!-- Set view resolver -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Method/URL mapping to controller -->
    <bean class="org.springframework.web.servlet.handler.MethodUrlHandlerMapping">
        <property name="mappings">
            <props>

                <!-- Testbed Related controllers -->
                <prop key="GET /testbed">listTestbedsController</prop>
                <prop key="GET /testbed/*">showTestbedController</prop>
                <prop key="GET /testbed/*/status">showTestbedStatusController</prop>
                <prop key="GET /testbed/*/georss">showTestbedGeoRssController</prop>
                <prop key="GET /testbed/*/kml">showTestbedKmlController</prop>
                <prop key="GET /testbed/*/wiseml">showTestbedWiseMlController</prop>

                <!-- Node Related controllers -->
                <prop key="GET /testbed/*/node">listNodesController</prop>
                <prop key="GET /testbed/*/node/*">showNodeController</prop>
                <prop key="GET /testbed/*/node/*/georss">showNodeGeoRssController</prop>
                <prop key="GET /testbed/*/node/*/kml">showNodeKmlController</prop>

                <!-- Link Related Controllers -->
                <prop key="GET /testbed/*/link">listLinksController</prop>
                <prop key="GET /testbed/*/link/*/*">showLinkController</prop>

                <!-- Capability Related Controllers -->
                <prop key="GET /testbed/*/capability">listCapabilitiesController</prop>
                <prop key="GET /testbed/*/capability/*">showCapbilityController</prop>


                <!-- Node/Capability Controllers for readings -->
                <prop key="GET /testbed/*/node/*/capability/*">nodeCapabilityController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/html">nodeCapabilityHTMLController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/tabdelimited">nodeCapabilityTabDelimitedController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/json">nodeCapabilityJsonController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/chart">nodeCapabilityChartController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/wiseml">nodeCapabilityWiseMlController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/latestreading">nodeCapabilityLastReadingController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/insert/timestamp/*/reading/*">
                    nodeCapabilityInsertReadingController
                </prop>

                <!-- Link/Capability Controllers for readings
                <prop key="GET /testbed/*/link/*/*/capability/*">linkCapabilityController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/html">linkCapabilityHTMLController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/tabdelimited">linkCapabilityTabDelimitedController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/json">linkCapabilityJsonController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/chart">linkCapabilityChartController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/wiseml">linkCapabilityWiseMlController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/lastreading">linkCapabilityLastReadingController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/insert/timestamp/*/reading/*">linkCapabilityInsertReadingController</prop>
                -->

                <!-- Send Command Controller -->
                <prop key="GET /sendCommand/destination/*/payload/*">sendCommandController</prop>
            </props>
        </property>
    </bean>

    <!-- List Testbeds Controller -->
    <bean name="listTestbedsController" class="eu.uberdust.controllers.ListTestbedsController">
        <property name="commandClass" value="eu.uberdust.commands.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="uriPattern" value="/testbed/"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="testbed/list.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="testbed/list.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Testbed Controller -->
    <bean name="showTestbedController" class="eu.uberdust.controllers.ShowTestbedController">
        <property name="commandClass" value="eu.uberdust.commands.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="linkManager" ref="linkManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="testbed/show.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="testbed/show.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Testbed Status Controller -->
    <bean name="showTestbedStatusController" class="eu.uberdust.controllers.ShowTestbedStatusController">
        <property name="commandClass" value="eu.uberdust.commands.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="linkReadingManager" ref="linkReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/status"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="testbed/status.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="testbed/status.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Testbed GeoRss Controller -->
    <bean name="showTestbedGeoRssController" class="eu.uberdust.controllers.ShowTestbedGeoRssController">
        <property name="commandClass" value="eu.uberdust.commands.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/georss"/>
    </bean>

    <!-- Show Testbed KML Controller -->
    <bean name="showTestbedKmlController" class="eu.uberdust.controllers.ShowTestbedKmlController">
        <property name="commandClass" value="eu.uberdust.commands.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/kml"/>
    </bean>

    <!-- Show Testbed WiseML Controller -->
    <bean name="showTestbedWiseMlController" class="eu.uberdust.controllers.ShowTestbedWiseMlController">
        <property name="commandClass" value="eu.uberdust.commands.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/wiseml"/>
    </bean>

    <!-- List available Nodes Controller -->
    <bean name="listNodesController" class="eu.uberdust.controllers.ListNodesController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="node/list.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="node/list.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Node Controller -->
    <bean name="showNodeController" class="eu.uberdust.controllers.ShowNodeController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager" />
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="node/show.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="node/show.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Node GeoRss Controller -->
    <bean name="showNodeGeoRssController" class="eu.uberdust.controllers.ShowNodeGeoRssController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/georss"/>
    </bean>

    <!-- Show Node KML Controller -->
    <bean name="showNodeKmlController" class="eu.uberdust.controllers.ShowNodeKmlController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/kml"/>
    </bean>

    <!-- List available Link Controller -->
    <bean name="listLinksController" class="eu.uberdust.controllers.ListLinksController">
        <property name="commandClass" value="eu.uberdust.commands.LinkCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="linkManager" ref="linkManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/link/"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="link/list.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="link/list.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Link Controller -->
    <bean name="showLinkController" class="eu.uberdust.controllers.ShowLinkController">
        <property name="commandClass" value="eu.uberdust.commands.LinkCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="linkManager" ref="linkManager"/>
        <property name="linkReadingManager" ref="linkReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/link/{sourceId}/{targetId}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="node/show.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="node/show.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- List available Capabilities Controller -->
    <bean name="listCapabilitiesController" class="eu.uberdust.controllers.ListCapabilitiesController">
        <property name="commandClass" value="eu.uberdust.commands.CapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/capability"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/list.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/list.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Capability Controller -->
    <bean name="showCapbilityController" class="eu.uberdust.controllers.ShowCapabilityController">
        <property name="commandClass" value="eu.uberdust.commands.CapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/capability/{capabilityName}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/show.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/show.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>


    <!-- Node-Capability Controller -->
    <bean name="nodeCapabilityController" class="eu.uberdust.controllers.NodeCapabilityController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/view.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/view.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Node-Capability Controller for HTML Format -->
    <bean name="nodeCapabilityHTMLController" class="eu.uberdust.controllers.NodeCapabilityHTMLController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/html"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/readings.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/readings.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Node-Capability Controller for Tab Delimited format -->
    <bean name="nodeCapabilityTabDelimitedController"
          class="eu.uberdust.controllers.NodeCapabilityTabDelimitedController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/tabdelimited"/>
    </bean>

    <!-- Node-Capability Controller for JSON format -->
    <bean name="nodeCapabilityJsonController" class="eu.uberdust.controllers.NodeCapabilityJSONController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/json"/>
    </bean>

    <!-- Node-Capability Controller Chart display -->
    <bean name="nodeCapabilityChartController" class="eu.uberdust.controllers.NodeCapabilityChartController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/chart"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/chart.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/chart.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Node-Capability WiseML Controller -->
    <bean name="nodeCapabilityWiseMlController" class="eu.uberdust.controllers.NodeCapabilityWiseMlController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/wiseml"/>
    </bean>

    <!-- Node-Capability Last Reading Controller -->
    <bean name="nodeCapabilityLastReadingController"
          class="eu.uberdust.controllers.NodeCapabilityLatestReadingController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/latestreading"/>
    </bean>

    <!-- Node-Capability Controller Insert Reading -->
    <bean name="nodeCapabilityInsertReadingController"
          class="eu.uberdust.controllers.NodeCapabilityInsertReadingController">
        <property name="commandClass" value="eu.uberdust.commands.NodeCapabilityInsertReadingCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/insert/timestamp/{timestamp}/reading/{reading}"/>
    </bean>

    <!-- Send Commmand Controller -->
    <bean name="sendCommandController" class="eu.uberdust.controllers.SendCommandController">
        <property name="commandClass" value="eu.uberdust.commands.DestinationPayloadCommand"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/sendCommand/destination/{destination}/payload/{payload}"/>
    </bean>
</beans>