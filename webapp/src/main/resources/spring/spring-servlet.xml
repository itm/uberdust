<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- Set view resolver -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"/>
        <property name="contentType" value="text/html; charset=UTF-8"/>
    </bean>

    <!-- Set the message source -->
    <bean id="messageSource" class=
            "org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>bundles/version</value>
                <value>bundles/hudson</value>
                <value>bundles/deployment</value>
            </list>
        </property>
    </bean>

    <!-- Deployment Host -->
    <bean id="deploymentHost" class="java.lang.String">
        <constructor-arg value="${uberdust.deployment.host}"/>
    </bean>

    <!-- REST Servlet Mappings -->
    <bean class="org.springframework.web.servlet.handler.MethodUrlHandlerMapping">
        <property name="mappings">
            <props>

                <!-- Testbed Related controller -->
                <prop key="GET /testbed">listTestbedsController</prop>
                <prop key="GET /testbed/*">showTestbedController</prop>
                <prop key="GET /testbed/*/status">showTestbedStatusController</prop>
                <prop key="GET /testbed/*/georss">showTestbedGeoRssController</prop>
                <prop key="GET /testbed/*/kml">showTestbedKmlController</prop>
                <prop key="GET /testbed/*/wiseml">showTestbedWiseMlController</prop>

                <!-- Node Related controller -->
                <prop key="GET /testbed/*/node">listNodesController</prop>
                <prop key="GET /testbed/*/node/*">showNodeController</prop>
                <prop key="GET /testbed/*/node/*/georss">showNodeGeoRssController</prop>
                <prop key="GET /testbed/*/node/*/kml">showNodeKmlController</prop>
                <prop key="GET /testbed/*/node/*/insert/description/*/">nodeInsertDescriptionController</prop>

                <!-- Link Related Controllers -->
                <prop key="GET /testbed/*/link">listLinksController</prop>
                <prop key="GET /testbed/*/link/*/*">showLinkController</prop>

                <!-- Capability Related Controllers -->
                <prop key="GET /testbed/*/capability">listCapabilitiesController</prop>
                <prop key="GET /testbed/*/capability/*">showCapbilityController</prop>
                <prop key="GET /testbed/*/capability/*/tabdelimited">capabilityTabDelimitedController</prop>
                <prop key="GET /testbed/*/capability/*/insert/description/*/">capabilityInsertDescriptionController
                </prop>

                <!-- Node/Capability Controllers for readings -->
                <prop key="GET /testbed/*/node/*/capability/*/html">nodeCapabilityHTMLController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/html/limit/*">nodeCapabilityHTMLController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/tabdelimited">nodeCapabilityTabDelimitedController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/tabdelimited/limit/*">nodeCapabilityTabDelimitedController
                </prop>
                <prop key="GET /testbed/*/node/*/capability/*/json">nodeCapabilityJsonController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/json/limit/*">nodeCapabilityJsonController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/wiseml">nodeCapabilityWiseMlController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/wiseml/limit/*">nodeCapabilityWiseMlController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/chart">nodeCapabilityChartController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/chart/limit/*">nodeCapabilityChartController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/latestreading">nodeCapabilityLastReadingController</prop>
                <prop key="GET /testbed/*/node/*/capability/*/latestreading/json">
                    nodeCapabilityJsonLastReadingController
                </prop>
                <prop key="GET /testbed/*/node/*/capability/*/insert/timestamp/*/reading/*/">
                    nodeCapabilityInsertDoubleReadingController
                </prop>
                <prop key="GET /testbed/*/node/*/capability/*/insert/timestamp/*/stringreading/*/">
                    nodeCapabilityInsertStringReadingController
                </prop>
                <prop key="GET /testbed/*/node/*/capability/*/insert/timestamp/*/reading/*/stringreading/*/">
                    nodeCapabilityInsertReadingController
                </prop>

                <!-- Link/Capability Controllers for readings -->
                <!--
                <prop key="GET /testbed/*/link/*/*/capability/*">linkCapabilityController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/html">linkCapabilityHTMLController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/tabdelimited">linkCapabilityTabDelimitedController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/json">linkCapabilityJsonController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/chart">linkCapabilityChartController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/wiseml">linkCapabilityWiseMlController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/last">linkCapabilityLastReadingController</prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/latestreading/json">linkCapabilityJsonLastReadingController</prop>
                -->
                <prop key="GET /testbed/*/link/*/*/capability/*/insert/timestamp/*/reading/*/">
                    linkCapabilityInsertReadingController
                </prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/insert/timestamp/*/stringreading/*/">
                    linkCapabilityInsertStringReadingController
                </prop>
                <prop key="GET /testbed/*/link/*/*/capability/*/insert/timestamp/*/reading/*/stringreading/*/">
                    linkCapabilityInsertReadingController
                </prop>

                <!-- Send Command Controller -->
                <prop key="GET /sendCommand/destination/*/payload/*">sendCommandController</prop>
            </props>
        </property>
    </bean>

    <!-- WebSocket Servlet Mappings -->
    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="/lastreading.ws">lastReadingWebSocketController</prop>
                <prop key="/insertreading.ws">insertReadingWebSocketController</prop>
            </props>
        </property>
    </bean>


    <!-- Last Reading Controller WebSocket -->
    <bean name="lastReadingWebSocketController" class="eu.uberdust.websockets.LastReadingWebSocket">
    </bean>

    <!-- Insert Reading Controller WebSocket -->
    <bean name="insertReadingWebSocketController" class="eu.uberdust.websockets.insert.InsertReadingWebSocket">
        <property name="insertReadingWebSocketListener">
            <bean class="eu.uberdust.websockets.insert.InsertReadingWebSocketListener" factory-method="getInstance">
                <property name="nodeReadingManager" ref="nodeReadingManager"/>
                <property name="linkReadingManager" ref="linkReadingManager"/>
            </bean>
        </property>
    </bean>


    <!-- List Testbeds Controller -->
    <bean name="listTestbedsController" class="eu.uberdust.rest.controller.ListTestbedsController">
        <property name="commandClass" value="eu.uberdust.command.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="uriPattern" value="/testbed/"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="testbed/list.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="testbed/list.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Testbed Controller -->
    <bean name="showTestbedController" class="eu.uberdust.rest.controller.ShowTestbedController">
        <property name="commandClass" value="eu.uberdust.command.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="linkManager" ref="linkManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="testbed/show.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="testbed/show.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Testbed Status Controller -->
    <bean name="showTestbedStatusController" class="eu.uberdust.rest.controller.ShowTestbedStatusController">
        <property name="commandClass" value="eu.uberdust.command.TestbedCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="lastNodeReadingManager" ref="lastNodeReadingManager"/>
        <property name="lastLinkReadingManager" ref="lastLinkReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/status"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="testbed/status.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="testbed/status.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Testbed GeoRss Controller -->
    <bean name="showTestbedGeoRssController" class="eu.uberdust.rest.controller.ShowTestbedGeoRssController">
        <property name="commandClass" value="eu.uberdust.command.TestbedCommand"/>
        <property name="deploymentHost" ref="deploymentHost"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/georss"/>
    </bean>

    <!-- Show Testbed KML Controller -->
    <bean name="showTestbedKmlController" class="eu.uberdust.rest.controller.ShowTestbedKmlController">
        <property name="commandClass" value="eu.uberdust.command.TestbedCommand"/>
        <property name="uriPattern" value="/testbed/{testbedId}/kml"/>
    </bean>

    <!-- Show Testbed WiseML Controller -->
    <bean name="showTestbedWiseMlController" class="eu.uberdust.rest.controller.ShowTestbedWiseMlController">
        <property name="commandClass" value="eu.uberdust.command.TestbedCommand"/>
        <property name="uriPattern" value="/testbed/{testbedId}/wiseml"/>
    </bean>

    <!-- List available Nodes Controller -->
    <bean name="listNodesController" class="eu.uberdust.rest.controller.ListNodesController">
        <property name="commandClass" value="eu.uberdust.command.NodeCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="node/list.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="node/list.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Node Controller -->
    <bean name="showNodeController" class="eu.uberdust.rest.controller.ShowNodeController">
        <property name="commandClass" value="eu.uberdust.command.NodeCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="node/show.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="node/show.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Node GeoRss Controller -->
    <bean name="showNodeGeoRssController" class="eu.uberdust.rest.controller.ShowNodeGeoRssController">
        <property name="commandClass" value="eu.uberdust.command.NodeCommand"/>
        <property name="deploymentHost" ref="deploymentHost"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/georss"/>
    </bean>

    <!-- Show Node KML Controller -->
    <bean name="showNodeKmlController" class="eu.uberdust.rest.controller.ShowNodeKmlController">
        <property name="commandClass" value="eu.uberdust.command.NodeCommand"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/kml"/>
    </bean>

    <!-- Insert Node Description Controller -->
    <bean name="nodeInsertDescriptionController" class="eu.uberdust.rest.controller.NodeInsertDescriptionController">
        <property name="commandClass" value="eu.uberdust.command.NodeCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/insert/description/{description}/"/>
    </bean>

    <!-- List available Link Controller -->
    <bean name="listLinksController" class="eu.uberdust.rest.controller.ListLinksController">
        <property name="commandClass" value="eu.uberdust.command.LinkCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="linkManager" ref="linkManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/link/"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="link/list.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="link/list.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Link Controller -->
    <bean name="showLinkController" class="eu.uberdust.rest.controller.ShowLinkController">
        <property name="commandClass" value="eu.uberdust.command.LinkCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="linkManager" ref="linkManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/link/{sourceId}/{targetId}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="node/show.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="node/show.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- List available Capabilities Controller -->
    <bean name="listCapabilitiesController" class="eu.uberdust.rest.controller.ListCapabilitiesController">
        <property name="commandClass" value="eu.uberdust.command.CapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/capability"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/list.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/list.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Show Capability Controller -->
    <bean name="showCapbilityController" class="eu.uberdust.rest.controller.ShowCapabilityController">
        <property name="commandClass" value="eu.uberdust.command.CapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="linkManager" ref="linkManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/capability/{capabilityName}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/show.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/show.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Latest Capability node readings -->
    <bean name="capabilityTabDelimitedController" class="eu.uberdust.rest.controller.CapabilityTabDelimitedController">
        <property name="commandClass" value="eu.uberdust.command.CapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="lastNodeReadingManager" ref="lastNodeReadingManager"/>
        <property name="lastLinkReadingManager" ref="lastLinkReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/capability/{capabilityName}/tabdelimited"/>
    </bean>

    <!-- Insert description of a capability -->
    <bean name="capabilityInsertDescriptionController"
          class="eu.uberdust.rest.controller.CapabilityInsertDescriptionController">
        <property name="commandClass" value="eu.uberdust.command.CapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/capability/{capabilityName}/insert/description/{description}/"/>

    </bean>

    <!-- Node-Capability Controller for HTML Format -->
    <bean name="nodeCapabilityHTMLController" class="eu.uberdust.rest.controller.NodeCapabilityHTMLController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/html/limit/{readingsLimit}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/readings.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/readings.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Node-Capability Controller for Tab Delimited format -->
    <bean name="nodeCapabilityTabDelimitedController"
          class="eu.uberdust.rest.controller.NodeCapabilityTabDelimitedController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/tabdelimited/limit/{readingsLimit}"/>
    </bean>

    <!-- Node-Capability Controller for JSON format -->
    <bean name="nodeCapabilityJsonController" class="eu.uberdust.rest.controller.NodeCapabilityJSONController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/json/limit/{readingsLimit}"/>
    </bean>

    <!-- Node-Capability Controller Chart display -->
    <bean name="nodeCapabilityChartController" class="eu.uberdust.rest.controller.NodeCapabilityChartController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/chart/limit/{readingsLimit}"/>
        <property name="viewNameSelector">
            <bean class="org.springframework.web.servlet.RestViewNameSelector">
                <property name="defaultViewName" value="capability/chart.html"/>
                <property name="views">
                    <map>
                        <entry key="text/html" value="capability/chart.html"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Node-Capability WiseML Controller -->
    <bean name="nodeCapabilityWiseMlController" class="eu.uberdust.rest.controller.NodeCapabilityWiseMlController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/wiseml/limit/{readingsLimit}"/>
    </bean>

    <!-- Node-Capability Last Reading Controller -->
    <bean name="nodeCapabilityLastReadingController"
          class="eu.uberdust.rest.controller.NodeCapabilityLatestReadingController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="lastNodeReadingManager" ref="lastNodeReadingManager"/>
        <property name="uriPattern" value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/latestreading"/>
    </bean>

    <!-- Node-Capability JSON Last Reading Contorller -->
    <bean name="nodeCapabilityJsonLastReadingController"
          class="eu.uberdust.rest.controller.NodeCapabilityLatestJSONLatestReadingController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="capabilityManager" ref="capabilityManager"/>
        <property name="lastNodeReadingManager" ref="lastNodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/latestreading/json"/>
    </bean>

    <!-- Node-Capability Controller Insert Double Reading -->
    <bean name="nodeCapabilityInsertDoubleReadingController"
          class="eu.uberdust.rest.controller.NodeCapabilityInsertDoubleReadingController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityInsertReadingCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/insert/timestamp/{timestamp}/reading/{reading}/"/>
    </bean>

    <!-- Node-Capability Controller Insert String Reading -->
    <bean name="nodeCapabilityInsertStringReadingController"
          class="eu.uberdust.rest.controller.NodeCapabilityInsertStringReadingController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityInsertReadingCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/insert/timestamp/{timestamp}/stringreading/{stringReading}/"/>
    </bean>

    <!-- Node-Capability Controller Insert Double & String Reading -->
    <bean name="nodeCapabilityInsertReadingController"
          class="eu.uberdust.rest.controller.NodeCapabilityInsertReadingController">
        <property name="commandClass" value="eu.uberdust.command.NodeCapabilityInsertReadingCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="nodeReadingManager" ref="nodeReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/node/{nodeId}/capability/{capabilityId}/insert/timestamp/{timestamp}/reading/{reading}/stringreading/{stringReading}/"/>
    </bean>


    <!-- Link-Capability Controller Insert Double Reading -->
    <bean name="linkCapabilityInsertDoubleReadingController"
          class="eu.uberdust.rest.controller.LinkCapabilityInsertDoubleReadingController">
        <property name="commandClass" value="eu.uberdust.command.LinkCapabilityInsertReadingCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="linkReadingManager" ref="linkReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/link/{sourceId}/{targetId}/capability/{capabilityId}/insert/timestamp/{timestamp}/reading/{reading}/"/>
    </bean>

    <!-- Link-Capability Controller Insert String Reading -->
    <bean name="linkCapabilityInsertStringReadingController"
          class="eu.uberdust.rest.controller.LinkCapabilityInsertStringReadingController">
        <property name="commandClass" value="eu.uberdust.command.LinkCapabilityInsertReadingCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="linkReadingManager" ref="linkReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/link/{sourceId}/{targetId}/capability/{capabilityId}/insert/timestamp/{timestamp}/stringreading/{stringReading}/"/>
    </bean>

    <!-- Link-Capability Controller Insert Reading -->
    <bean name="linkCapabilityInsertReadingController"
          class="eu.uberdust.rest.controller.LinkCapabilityInsertReadingController">
        <property name="commandClass" value="eu.uberdust.command.LinkCapabilityInsertReadingCommand"/>
        <property name="testbedManager" ref="testbedManager"/>
        <property name="linkReadingManager" ref="linkReadingManager"/>
        <property name="uriPattern"
                  value="/testbed/{testbedId}/link/{sourceId}/{targetId}/capability/{capabilityId}/insert/timestamp/{timestamp}/reading/{reading}/stringreading/{stringReading}/"/>
    </bean>

    <!-- Send Commmand Controller -->
    <bean name="sendCommandController" class="eu.uberdust.rest.controller.SendCommandController">
        <property name="commandClass" value="eu.uberdust.command.DestinationPayloadCommand"/>
        <property name="nodeManager" ref="nodeManager"/>
        <property name="uriPattern" value="/sendCommand/destination/{destination}/payload/{payload}"/>
    </bean>
</beans>