all: shawn

CXX = g++
CXXFLAGS = -g -I. -I$(SHAWN_INCLUDE_DIR)/src -I$(SHAWN_INCLUDE_DIR)/buildfiles \
	-I$(WISELIB_PATH_TESTING) -I$(WISELIB_PATH) \
	-I/usr/local/lib -I/opt/local/lib \
	-Wall -Wno-unknown-pragmas -Wno-sign-compare -DNDEBUG \
	-DOSMODEL=ShawnOsModel -DSHAWN 
LDFLAGS = -L$(SHAWN_LIB_DIR) $(SHAWN_LINK_LIBS)

OUTPUT = out/shawn
OUTBIN = .

shawn:
	@mkdir -p $(OUTPUT)
	@echo "compiling..."
	$(CXX) $(CXXFLAGS) -c \
	  $(WISELIB_PATH)/external_interface/shawn/standalone/shawn_standalone_init.cpp \
	  -o $(OUTPUT)/shawn_standalone_init.o
	$(CXX) $(CXXFLAGS) -c \
	  $(WISELIB_PATH)/external_interface/shawn/standalone/shawn_standalone_processor.cpp \
	  -o $(OUTPUT)/shawn_standalone_processor.o
	$(CXX) $(CXXFLAGS) -c \
	  $(WISELIB_PATH)/external_interface/shawn/standalone/shawn_standalone_processor_factory.cpp \
	  -o $(OUTPUT)/shawn_standalone_processor_factory.o
	$(CXX) $(CXXFLAGS) -c ./$(APP_SRC) -o $(OUTPUT)/$(BIN_OUT).o
	@echo "linking..."
	$(CXX) $(OUTPUT)/shawn_standalone_init.o  $(OUTPUT)/shawn_standalone_processor.o \
		$(OUTPUT)/shawn_standalone_processor_factory.o $(OUTPUT)/$(BIN_OUT).o \
		-o $(OUTBIN)/$(BIN_OUT) $(LDFLAGS)
